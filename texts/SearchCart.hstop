<h1>Example of a persistent flow, with TCache queries and full text search</h1><div>This example creates a catalog with three products (see this <a href="http://haskell-web.blogspot.com.es/2013/04/mflow-what-about-data-tier-adding-it-to.html" title="" target="">article</a>)</div><div><br></div><div><pre><font color="Blue">createProducts</font><font color="Red">=</font> atomically <font color="Cyan">$</font> mapM newDBRef
    <font color="Red">[</font> Product <font color="Magenta">"ipad 3G"</font>   <font color="Red">[</font><font color="Magenta">"gadget"</font><font color="Cyan">,</font><font color="Magenta">"pad"</font><font color="Red">]</font>   <font color="Magenta">"ipad 8GB RAM, 3G"</font>       <font color="Magenta">400</font> <font color="Magenta">200</font>
    <font color="Cyan">,</font> Product <font color="Magenta">"ipad"</font>      <font color="Red">[</font><font color="Magenta">"gadget"</font><font color="Cyan">,</font><font color="Magenta">"pad"</font><font color="Red">]</font>   <font color="Magenta">"ipad 8 GB RAM"</font>           <font color="Magenta">300</font> <font color="Magenta">300</font>
    <font color="Cyan">,</font> Product <font color="Magenta">"iphone 3"</font>  <font color="Red">[</font><font color="Magenta">"gadget"</font><font color="Cyan">,</font><font color="Magenta">"phone"</font><font color="Red">]</font> <font color="Magenta">"iphone 3 nice and beatiful"</font>  <font color="Magenta">200</font> <font color="Magenta">100</font>
    <font color="Red">]</font></pre><pre><span style="font-family: 'rebuchet MS', Helvetica, Arial, Verdana, sans-serif; font-size: 13.333333969116211px; white-space: normal;"><a href="http://hackage.haskell.org/package/TCache/docs/Data-TCache.html#v:newDBRef" title="" target="">newDBRef </a>creates a new data and a new TCache reference to the data in the cache and in persistent storage.</span></pre><pre><span style="font-family: 'rebuchet MS', Helvetica, Arial, Verdana, sans-serif; font-size: 13.333333969116211px; white-space: normal;"><br></span></pre><pre><span style="font-family: 'rebuchet MS', Helvetica, Arial, Verdana, sans-serif; font-size: 13.333333969116211px; white-space: normal;">The Product definition:</span></pre><pre><font color="Green"><u>data</u></font> Product<font color="Red">=</font> Product<font color="Cyan">{</font> namep <font color="Red">::</font> String
                     <font color="Cyan">,</font> typep <font color="Red">::</font> <font color="Red">[</font>String<font color="Red">]</font>
                     <font color="Cyan">,</font> descriptionp <font color="Red">::</font> String
                     <font color="Cyan">,</font> pricep <font color="Red">::</font> Price
                     <font color="Cyan">,</font> stock <font color="Red">::</font> Int<font color="Cyan">}</font>
              <font color="Green"><u>deriving</u></font> <font color="Cyan">(</font>Read<font color="Cyan">,</font>Show<font color="Cyan">,</font>Typeable<font color="Cyan">)</font></pre><pre><br></pre><pre><pre><span style="font-family: 'rebuchet MS', Helvetica, Arial, Verdana, sans-serif; font-size: 13.333333969116211px; white-space: normal;">The catalog will be stored in memory with persistence in files:</span></pre><pre><font color="Green"><u>instance</u></font> Indexable Product <font color="Green"><u>where</u></font>
   key prod<font color="Red">=</font> <font color="Magenta">"Prod "</font><font color="Cyan">++</font> namep prod</pre>
<font color="Green"><u>instance</u></font> Serializable Product <font color="Green"><u>where</u></font>
  serialize<font color="Red">=</font> pack <font color="Cyan">.</font> show
  deserialize<font color="Red">=</font> read <font color="Cyan">.</font> unpack
  setPersist<font color="Red">=</font> const <font color="Cyan">$</font> Just filePersist</pre><pre><span style="font-family: 'rebuchet MS', Helvetica, Arial, Verdana, sans-serif; font-size: 13.333333969116211px; white-space: normal;">If you change the persistence to Amazon S3 or any other. See the&nbsp;</span><a href="http://localhost/noscript/databasesamples" style="font-family: 'rebuchet MS', Helvetica, Arial, Verdana, sans-serif; font-size: 13.333333969116211px; white-space: normal; background-color: rgb(238, 238, 238);"><b>database examples</b></a><span style="font-family: 'rebuchet MS', Helvetica, Arial, Verdana, sans-serif; font-size: 13.333333969116211px; white-space: normal; background-color: rgb(238, 238, 238);">&nbsp;</span><span style="font-family: 'rebuchet MS', Helvetica, Arial, Verdana, sans-serif; font-size: 13.333333969116211px; white-space: normal;">&nbsp;for other TCache persistence mechanisms.</span></pre><pre><span style="white-space: normal; font-size: 13.333333969116211px; font-family: 'rebuchet MS', Helvetica, Arial, Verdana, sans-serif;">The interface will show the categories of the second field and can perform full text search in the third field. &nbsp;The code also perform queries using the first field to get the price (although the latter is only for illustrative purposes since this field is the key, so the register can be accessed using readDBRef&nbsp;</span><span style="font-size: 13.333333969116211px; font-family: 'rebuchet MS', Helvetica, Arial, Verdana, sans-serif;">&nbsp;(see the </span><a href="http://haskell-web.blogspot.com.es/2013/04/mflow-what-about-data-tier-adding-it-to.html" title="" target="" style="font-size: 13.333333969116211px; font-family: 'rebuchet MS', Helvetica, Arial, Verdana, sans-serif;">article</a><span style="font-size: 13.333333969116211px; font-family: 'rebuchet MS', Helvetica, Arial, Verdana, sans-serif;">)</span></pre><pre><span style="font-family: 'rebuchet MS', Helvetica, Arial, Verdana, sans-serif; font-size: 13.333333969116211px; white-space: normal;">The products selected will be accumulated in a shop cart that will be stored in the session state, that is persistent since the flow uses '<a href="http://hackage.haskell.org/package/MFlow/docs/MFlow-Forms.html#v:step" title="" target="">step</a>'.</span><br></pre><pre><span style="font-family: 'rebuchet MS', Helvetica, Arial, Verdana, sans-serif; font-size: 13.333333969116211px; white-space: normal;">See the code below.</span></pre></div>